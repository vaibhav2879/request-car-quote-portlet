(function( $ ){

  $.fn.numericInput = function( options ){
      if ( !options ){
        options = {};
      }
      var defaultOptions = {ints: 15, float: 0, separator: ".", allowNegative : false, maxValue : 999999};
      options = $.extend( defaultOptions, options );
      var intNumAllow = options.ints;
      var floatNumAllow = options.float;
      var separator = options.separator;
      var negativeAllowed = options.allowNegative;
      var maxValue = options.maxValue;
      $( this ).on( 'keydown keypress keyup paste input', function(){
        while ( (this.value.split( separator ).length - 1) > 1 ){
          this.value = this.value.slice( 0, -1 );
          if ( (this.value.split( separator ).length - 1) <= 1 ){
            return false;
          }
        }
        var re = new RegExp('[^0-9' + options.separator + ']', 'g');
        if (negativeAllowed) {
          var re = new RegExp('[^-?\d]+-[^0-9' + options.separator + ']', 'g');
        }
        if (negativeAllowed) {
          var tmp = this.value.replace(re, '');
          tmp = tmp.replace(/-+/g, '-');
          this.value = tmp;
        }else{
          this.value = this.value.replace(re, '');
        }
        var allowedLength;
        var iof = this.value.indexOf( separator );
        if ( (iof != -1) && (this.value.substring( 0, iof ).length > intNumAllow) ){
          allowedLength = 0;
        }
        else if ( iof != -1 ){
          allowedLength = iof + floatNumAllow + 1;
        }
        else{
          allowedLength = this.value.indexOf('-') !== -1 ? intNumAllow + 1 : intNumAllow;
        }
        this.value = this.value.substring( 0, allowedLength );
        return true;
      });
      return $( this );
  };

  $.fn.textInput = function( options ){
      if ( !options ){
        options = {};
      }
      var defaultOptions = {allowNumbers:false, allowAlphabets:true, allowedSpecialChar : '', maxLength:false};
      options = $.extend( defaultOptions, options );
      var allowNumber = options.allowNumbers;
      var maxlength = options.maxLength;
      var specialChars = options.allowedSpecialChar;
      var attrMaxLength = $(this).attr("maxlength") || options.maxLength;
      var re = new RegExp('[^a-zA-Z' + specialChars + ']', 'g');
      if (attrMaxLength && attrMaxLength !== "") {
        maxlength = parseInt(attrMaxLength);
      }
      if (allowNumber) {
        re = new RegExp('[^a-zA-Z0-9' + specialChars + ']', 'g');
      }
      $( this ).on( 'keydown keypress keyup paste input', function(){
        this.value = this.value.replace(re, '');

        if (!isNaN(maxlength)) {
          this.value = this.value.substring( 0, maxlength );
        }
        return true;
      });
      return $( this );
  };

})( jQuery );